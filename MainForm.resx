<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timerStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="profilePanel.Rectangle" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFFTeXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0
        dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAABlTeXN0ZW0uRHJh
        d2luZy5SZWN0YW5nbGVGBAAAAAF4AXkFd2lkdGgGaGVpZ2h0AAAAAAsLCwsCAAAAAACAvgAAQL8AAMA/
        AADAPws=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>27</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKysrAC9vb0Arq6uAG9vbwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnZ2dB6KiogoWFhYB0tLSAImJ
        iQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACysrJJy8vLicvL
        y162trYgXFxcA8zMzACzs7MAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALCw
        sCnMzMx41tbWu9bW1rHLy8tptra2JXNzcwT8/PwAnp6eACYmJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AJGRkQbAwMA00tLSh9ra2srY2NjAzc3Nd7q6ujCQkJAJ////ALq6ugCcnJwAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACQkJAAu7u7AP///wCfn58LxMTEQNXV1Zbc3NzX2tray8/Pz4S7u7s4lZWVC///
        /wCwsLAAenp6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAKenpwD///8An5+fDsfHx0nX19ei39/f4dzc
        3NfQ0NCSwMDARqamphIAAAAAwMDAAKqqqgA8PDwAAAAAAAAAAAAAAAAAAAAAAHl5eQCnp6cAtra2AL+/
        vwDGxsYAycnJAMvLywDJyckAubm5AGpqagAAAAAAAAAAAAAAAAAAAAAAAAAAAJubmwDCwsIAAAAAAK6u
        rhXKyspX2trasOHh4erd3d3e0tLSnsDAwE+mpqYVCwsLAdvb2wC0tLQAnZ2dAKurqwDKysoA+/v7AP//
        /wB4eHgDnZ2dCqurqxOvr68as7OzG62trRaVlZUG////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB4eHgAvr6+AAAAAAGvr68ZzMzMYdzc3Lri4uLu3t7e59LS0qvFxcVeuLi4KK+vrxWQkJALpKSkELe3
        tyG+vr44xMTEVczMzHTS0tKX1tbWstjY2L/a2trC2trat83NzWmgoKALAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAmJiYApqamALu7uwAAAAABr6+vJc7Ozpvm5ub46Ojo/uHh4evd3d3I2trarNPT
        05XU1NSh1NTUv9HR0dnX19fr4ODg9+fn5/7p6en/6+vr/+vr6//s7Oz/3t7eybKysiMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALW1tQCXl5cHs7OzHLGxsRy6uro909PTwuHh4fzm5ub/5ubm/+Xl
        5f/i4uL/4ODg/uDg4P/Ozs7/wMDA/9LS0v/q6ur/7+/v/+7u7v/u7u7/7u7u/+rq6vnX19eYpKSkEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAra2tC9DQ0GjKysq4lJSUuLe3t8vh4eH73Nzc/9DQ
        0P/Jycn/w8PD/7+/v//Gxsb/z8/P/6urq/+cnJz/np6e/76+vv/k5OT/7u7u/+3t7f/p6en02dnZpr29
        vSwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0tLQg29vbv9DQ0P+CgoL/sbGx/+jo
        6P/R0dH/s7Oz/7a2tv+9vb3/xMTE/9DQ0P/V1dX/sbGx/5aWlv+BgYH/hISE/5ycnP/IyMjp3t7eudDQ
        0HSzs7MeAAAAADU1NQAAAAAAkpKSAJ6engAAAAAAAAAAAAAAAAAAAAAAAAAAAJqamg7Ozs6b2tra/c3N
        zf/d3d3/6urq/+Li4v/c3Nz/4eHh/+Tk5P/l5eX/5ubm/uTk5Pzd3d3+zMzM/6ioqP1zc3PoWFhYtHNz
        c12ysrIeiYmJBtPT0wCjo6MAAAAAAAAAAACRkZEHlJSUA8XFxQDExMQArq6uAAAAAAC8vLwAtLS0JNra
        2sHf39/+2tra4N3d3cfa2trR3Nzc9d7e3v/Q0ND/wsLC6dDQ0KzU1NSWz8/PisrKyqPW1tbn0tLS+KKi
        oqBQUFAmAAAAAcfHxwCdnZ0AAAAAAAAAAAAAAAAAAAAAAKOjozC6urpDwMDAIbu7uwbj4+MAsLCwAKam
        pg7T09OC5eXl89bW1su8vLxSvr6+JLe3tz7T09O73t7e96qqqvtoaGjCeXl5LpSUlAtubm4ImpqaFsjI
        yGLc3NzL3d3d3s3NzXiqqqoW////AHt7ewAAAAAAAAAAAAAAAAAAAAAAqKioEL6+vjzGxsZoycnJXsnJ
        ySytra0NzMzMXuLi4uHc3NzBv7+/QjU1NQLAwMAAdXV1A8TExDfQ0NBtpaWlfl5eXlRJSUkKoKCgAIaG
        hgCysrIAbW1tA8DAwDbX19ef3Nzc3tHR0Za0tLQlAQEBAaqqqgAAAAAAAAAAAAAAAACnp6cAkJCQAb+/
        vxvHx8dTysrKg8fHx4nW1tbO2dnZur6+vjh2dnYDpKSkAAAAAACkpKQA////AAAAAAFvb28El5eXAmpq
        agAAAAAAAAAAAGNjYwC0tLQA////AK6urhjOzs5w2dnZy9PT06m8vLw3QUFBAaOjowAAAAAAAAAAAAAA
        AAChoaEA0dHRAKmpqQOxsbErwMDAlMXFxcu7u7uNp6enHgAAAACurq4AioqKAAAAAAAgICAAaGhoAICA
        gAB9fX0AMjIyAAAAAAAAAAAAAAAAAAAAAABmZmYA3d3dAIiIiAbCwsI/1NTUqNPT07bDw8NMm5ubB7u7
        uwCEhIQAAAAAAAAAAACTk5MAvb29AFpaWgKnp6cXrKysNbi4uHS7u7uCtLS0O5+fnwe5ubkAcnJyAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7OzsAuLi4AAAAAAC3t7cgzc3NedDQ
        0LHFxcVio6OjDcvLywAAAAAAAAAAAAAAAAAAAAAAe3t7AKmpqQDh4eEAm5ubC7Ozs0G3t7d2srKyV6am
        phl1dXUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAW1tbAOjo
        6ACUlJQJxMTES8vLy5rExMRyqampHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKCggCwsLAAHh4eAaqq
        qhivr69On5+fVG5ubhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAg4ODALu7uwBhYWECurq6Jr6+vmihoaFJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB/f38Aubm5AJOTkwSJiYkWWVlZDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOTkwDz8/MAnJycBo+PjwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABzc3MApqamAJeXlwBnZ2cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaWlgCxsbEAmZmZAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////v////8/////j////+H////4f
        ////h////+H/B//wAAP/8AAD/4AAB/8AAB//AAB//wAA//44fP/+f/4/8P//n/j//8//f//3////+///
        //////////////////////////////////8=
</value>
  </data>
</root>